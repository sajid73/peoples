{"version":3,"sources":["components/People/People.js","components/PeopleList/PeopleList.js","components/Searchbar/Searchbar.js","components/SearchResult/SearchResult.js","components/Home/Home.js","components/PeopleDetails/Vehicle.js","components/PeopleDetails/PeopleDetails.js","App.js","index.js"],"names":["People","people","useState","category","setCategory","species","setSpecies","fetch","homeworld","then","res","json","data","name","undefined","className","PeopleList","page","setPage","history","useHistory","fetchPeopleData","key","a","queryKey","useQuery","status","results","map","onClick","singlePerson","url","slice","push","peopledetails","to","pre","Searchbar","setPeople","type","placeholder","onChange","e","target","value","handleSearch","SearchResult","search","fetchSearchData","queryClient","QueryClient","Home","style","margin","QueryClientProvider","client","Vehicle","vehicle","vehicles","setVehicles","PeopleDetails","setPeopledetails","id","useParams","useEffect","height","mass","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2e24ab9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./People.css\";\r\n\r\nconst People = ({ people }) => {\r\n  // declaring necessary states\r\n  const [category, setCategory] = useState(\"\");\r\n  const [species, setSpecies] = useState(\"\");\r\n\r\n  // data fetching\r\n  fetch(people.homeworld)\r\n    .then((res) => res.json())\r\n    .then((data) => setCategory(data.name));\r\n\r\n  // checking if there is any species otherwise it will show blank\r\n  if (people.species[0] !== undefined) {\r\n    fetch(people.species[0])\r\n      .then((res) => res.json())\r\n      .then((data) => setSpecies(data.name));\r\n  }\r\n\r\n  return (\r\n    <div className=\"people_card\">\r\n      <div className=\"infos\">\r\n        <h4>{people.name}</h4>\r\n        <p>{category ? category : \"Loading...\"}</p>\r\n      </div>\r\n      <div className=\"category\">\r\n        {/* if there is no species from api data, by default it will show 'human' */}\r\n        <p>{species ? `${species}` : \"Human\"}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default People;\r\n","import React, { useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport People from '../People/People';\r\n\r\n\r\nconst PeopleList = () => {\r\n    // state for page number\r\n    const [page, setPage] = useState(1)\r\n    const history = useHistory();\r\n\r\n    // functions\r\n    const fetchPeopleData = async (key) => {\r\n        const data = await fetch(`https://swapi.dev/api/people/?page=${key.queryKey[1]}`)\r\n        return data.json();\r\n    }\r\n    const peopledetails = (people) => {\r\n        const singlePerson = people.url.slice(29,30);\r\n        history.push(`/api/people/${singlePerson}`)\r\n    }\r\n    \r\n    const { data, status } = useQuery(['people', page], fetchPeopleData);\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                status === 'success' && data.results ?\r\n                data.results.map(people => <div key={people.name} onClick={() => peopledetails(people)}><People people={people} /></div>) :\r\n                <div>\r\n                    <h1 className=\"error\">No more data available</h1>\r\n                    <Link to=\"/\">Go to home</Link>\r\n                </div>\r\n            }\r\n            {\r\n                status === 'loading' && <h1 className=\"loading\">Loading. Please wait!</h1>\r\n            }\r\n            {\r\n                status === \"error\" && <h1 className=\"error\">Something went wrong!</h1>\r\n            }\r\n            <div>\r\n                {/* for pagination */}\r\n                {\r\n                    page === 1 ? '' : <button onClick={()=> setPage(pre => pre-1)} className=\"pagination-button\">Prev</button>\r\n                }\r\n                {page}\r\n                {\r\n                    true ? <button onClick={()=> setPage(pre => pre+1)} className=\"pagination-button\">Next</button> : \"\"\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PeopleList;","import React from 'react';\r\nimport './Searchbar.css';\r\n\r\nconst Searchbar = ({setPeople}) => {\r\n    const handleSearch = (e) => {\r\n        setPeople(e.target.value);\r\n    }\r\n    return (\r\n        <div>\r\n            <input className=\"searchbar\" type=\"text\" name=\"peopleName\" placeholder=\"Search people\" onChange={(e) => handleSearch(e)} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Searchbar;","import React from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport People from '../People/People';\r\n\r\nconst SearchResult = ({search}) => {\r\n    const fetchSearchData = async () => {\r\n        const url = `https://swapi.dev/api/people/?search=${search}`;\r\n        const data = await fetch(url)\r\n        return data.json();\r\n    }\r\n    const { data, status } = useQuery('search', fetchSearchData)\r\n    return (\r\n        <div>\r\n            {\r\n                status === 'success' && data.results.map(people => <People key={people.name} people={people} />)\r\n            }\r\n            {\r\n                status === 'loading' && <h1 className=\"loading\">Loading. Please wait!</h1>\r\n            }\r\n            {\r\n                status === 'idle' && <h1 className=\"loading\">Loading. Please wait!</h1>\r\n            }\r\n            {\r\n                status === \"error\" && <h1 className=\"error\">No Match found / something went wrong!</h1>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResult;","import React from \"react\";\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport PeopleList from \"../PeopleList/PeopleList\";\r\nimport Searchbar from \"../Searchbar/Searchbar\";\r\nimport SearchResult from \"../SearchResult/SearchResult\";\r\n\r\nconst queryClient = new QueryClient()\r\n\r\nconst Home = ({people, setPeople}) => {\r\n  return (\r\n    <div>\r\n      <Searchbar setPeople={setPeople} />\r\n      {people && <h3 style={{margin: '10px'}}>Searching for: {people}</h3>}\r\n      <QueryClientProvider client={queryClient}>\r\n        {/* showing result or people list */}\r\n        {people ? <SearchResult search={people} /> : <PeopleList />}\r\n      </QueryClientProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport './PeopleDetails.css';\r\n\r\nconst Vehicle = ({vehicle}) => {\r\n    const [vehicles, setVehicles] = useState('')\r\n    fetch(vehicle)\r\n      .then(res => res.json())\r\n      .then(data=> setVehicles(data.name))\r\n    return (\r\n        <li className=\"vehicle\">- {vehicles}</li>\r\n    );\r\n};\r\n\r\nexport default Vehicle;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./PeopleDetails.css\";\r\nimport Vehicle from \"./Vehicle\";\r\n\r\nconst PeopleDetails = () => {\r\n  const [peopledetails, setPeopledetails] = useState(\"\");\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    fetch(\"https://swapi.dev/api/people/\" + id)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setPeopledetails(data);\r\n      });\r\n  }, [id]);\r\n  return (\r\n    <div className=\"singleDetails\">\r\n      {peopledetails && (\r\n        <>\r\n          <h1>{peopledetails.name}</h1>\r\n          <h3 className=\"vehicles\">Vehicles</h3>\r\n          <ul>\r\n            {\r\n                peopledetails.vehicles.map(vehicle => <Vehicle key={vehicle} vehicle={vehicle} />)\r\n            }\r\n          </ul>\r\n          <h3 className=\"vehicles\">Height: {peopledetails.height} cm</h3>\r\n          <h3 className=\"vehicles\">Mass: {peopledetails.mass} kg</h3>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PeopleDetails;\r\n","import { useState } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home/Home\";\nimport PeopleDetails from \"./components/PeopleDetails/PeopleDetails\";\n\nfunction App() {\n  // state for search value\n  const [people, setPeople] = useState(\"\");\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* router switch for route */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Link to=\"/api/people\">See all people list</Link>\n          </Route>\n          <Route exact path=\"/api/people\">\n            <Home people={people} setPeople={setPeople} />\n          </Route>\n          <Route path=\"/api/people/:id\">\n            <PeopleDetails />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}